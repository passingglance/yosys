
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.32+66 (git sha1 2f901a829, clang 15.0.7 -fPIC -Os)


-- Executing script file `tribuf.ys' --

1. Executing Verilog-2005 frontend: ../common/tribuf.v
Parsing Verilog input from `../common/tribuf.v' to AST representation.
Suppressed Warning: Yosys has only limited support for tri-state logic at the moment. (../common/tribuf.v:7)
Generating RTLIL representation for module `\tristate'.
Note: Assuming pure combinatorial block at ../common/tribuf.v:6.5-7.29 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Analyzing design hierarchy..
Top module:  \tristate

2.2. Analyzing design hierarchy..
Top module:  \tristate
Removed 0 unused modules.

3. Executing PROC pass (convert processes to netlists).

3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 1 assignment to connection.

3.4. Executing PROC_INIT pass (extract init attributes).

3.5. Executing PROC_ARST pass (detect async resets in processes).

3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\tristate.$proc$../common/tribuf.v:6$1'.

3.8. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\tristate.\o' from process `\tristate.$proc$../common/tribuf.v:6$1'.

3.9. Executing PROC_DFF pass (convert process syncs to FFs).

3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `tristate.$proc$../common/tribuf.v:6$1'.
Cleaned up 0 empty switches.

3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

4. Executing TRIBUF pass.

5. Executing FLATTEN pass (flatten design).

6. Executing SYNTH pass.

6.1. Executing HIERARCHY pass (managing design hierarchy).

6.1.1. Analyzing design hierarchy..
Top module:  \tristate

6.1.2. Analyzing design hierarchy..
Top module:  \tristate
Removed 0 unused modules.

6.2. Executing PROC pass (convert processes to netlists).

6.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

6.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

6.2.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

6.2.4. Executing PROC_INIT pass (extract init attributes).

6.2.5. Executing PROC_ARST pass (detect async resets in processes).

6.2.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

6.2.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

6.2.8. Executing PROC_DLATCH pass (convert process syncs to latches).

6.2.9. Executing PROC_DFF pass (convert process syncs to FFs).

6.2.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

6.2.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

6.2.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

6.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

6.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..
Removed 0 unused cells and 2 unused wires.
<suppressed ~1 debug messages>

6.5. Executing CHECK pass (checking for obvious problems).
Checking module tristate...
Found and reported 0 problems.

6.6. Executing OPT pass (performing simple optimizations).

6.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

6.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

6.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tristate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

6.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tristate.
Performed a total of 0 changes.

6.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

6.6.6. Executing OPT_DFF pass (perform DFF optimizations).

6.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

6.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

6.6.9. Finished OPT passes. (There is nothing left to do.)

6.7. Executing FSM pass (extract and optimize FSM).

6.7.1. Executing FSM_DETECT pass (finding FSMs in design).

6.7.2. Executing FSM_EXTRACT pass (extracting FSM from design).

6.7.3. Executing FSM_OPT pass (simple optimizations of FSMs).

6.7.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

6.7.5. Executing FSM_OPT pass (simple optimizations of FSMs).

6.7.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

6.7.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

6.7.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

6.8. Executing OPT pass (performing simple optimizations).

6.8.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

6.8.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

6.8.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tristate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

6.8.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tristate.
Performed a total of 0 changes.

6.8.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

6.8.6. Executing OPT_DFF pass (perform DFF optimizations).

6.8.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

6.8.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

6.8.9. Finished OPT passes. (There is nothing left to do.)

6.9. Executing WREDUCE pass (reducing word size of cells).

6.10. Executing PEEPOPT pass (run peephole optimizers).

6.11. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

6.12. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module tristate:
  created 0 $alu and 0 $macc cells.

6.13. Executing SHARE pass (SAT-based resource sharing).

6.14. Executing OPT pass (performing simple optimizations).

6.14.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

6.14.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

6.14.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tristate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

6.14.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tristate.
Performed a total of 0 changes.

6.14.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

6.14.6. Executing OPT_DFF pass (perform DFF optimizations).

6.14.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

6.14.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

6.14.9. Finished OPT passes. (There is nothing left to do.)

6.15. Executing MEMORY pass.

6.15.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

6.15.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

6.15.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

6.15.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

6.15.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

6.15.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

6.15.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

6.15.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

6.15.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

6.15.10. Executing MEMORY_COLLECT pass (generating $mem cells).

6.16. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

6.17. Executing OPT pass (performing simple optimizations).

6.17.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

6.17.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

6.17.3. Executing OPT_DFF pass (perform DFF optimizations).

6.17.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

6.17.5. Finished fast OPT passes.

6.18. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

6.19. Executing OPT pass (performing simple optimizations).

6.19.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

6.19.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

6.19.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tristate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

6.19.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tristate.
Performed a total of 0 changes.

6.19.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

6.19.6. Executing OPT_SHARE pass.

6.19.7. Executing OPT_DFF pass (perform DFF optimizations).

6.19.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

6.19.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

6.19.10. Finished OPT passes. (There is nothing left to do.)

6.20. Executing TECHMAP pass (map to technology primitives).

6.20.1. Executing Verilog-2005 frontend: /home/lofty/yosys/share/techmap.v
Parsing Verilog input from `/home/lofty/yosys/share/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

6.20.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $tribuf.
No more expansions possible.
<suppressed ~74 debug messages>

6.21. Executing OPT pass (performing simple optimizations).

6.21.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

6.21.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

6.21.3. Executing OPT_DFF pass (perform DFF optimizations).

6.21.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

6.21.5. Finished fast OPT passes.

6.22. Executing ABC pass (technology mapping using ABC).

6.22.1. Extracting gate netlist of module `\tristate' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

6.23. Executing OPT pass (performing simple optimizations).

6.23.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

6.23.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

6.23.3. Executing OPT_DFF pass (perform DFF optimizations).

6.23.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

6.23.5. Finished fast OPT passes.

6.24. Executing HIERARCHY pass (managing design hierarchy).

6.24.1. Analyzing design hierarchy..
Top module:  \tristate

6.24.2. Analyzing design hierarchy..
Top module:  \tristate
Removed 0 unused modules.

6.25. Printing statistics.

=== tristate ===

   Number of wires:                  3
   Number of wire bits:              3
   Number of public wires:           3
   Number of public wire bits:       3
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $_TBUF_                         1

6.26. Executing CHECK pass (checking for obvious problems).
Checking module tristate...
Found and reported 0 problems.

7. Executing EQUIV_OPT pass.

7.1. Executing HIERARCHY pass (managing design hierarchy).

7.1.1. Analyzing design hierarchy..
Top module:  \tristate

7.1.2. Analyzing design hierarchy..
Top module:  \tristate
Removed 0 unused modules.

7.2. Executing CHECK pass (checking for obvious problems).
Checking module tristate...
Found and reported 0 problems.

7.3. Executing SYNTH_NANOXPLORE pass.

7.3.1. Executing Verilog-2005 frontend: /home/lofty/yosys/share/nanoxplore/cells_sim.v
Parsing Verilog input from `/home/lofty/yosys/share/nanoxplore/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\NX_LUT'.
Generating RTLIL representation for module `\NX_DFF'.
Generating RTLIL representation for module `\NX_CY'.
Generating RTLIL representation for module `\NX_XRFB_64x18'.
Generating RTLIL representation for module `\NX_XRFB_32x36'.
Successfully finished Verilog frontend.

7.3.2. Executing HIERARCHY pass (managing design hierarchy).

7.3.2.1. Analyzing design hierarchy..
Top module:  \tristate

7.3.2.2. Analyzing design hierarchy..
Top module:  \tristate
Removed 0 unused modules.

7.3.3. Executing PROC pass (convert processes to netlists).

7.3.3.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.3.3.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:139$369 in module NX_XRFB_32x36.
Marked 1 switch rules as full_case in process $proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:107$197 in module NX_XRFB_64x18.
Marked 2 switch rules as full_case in process $proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:48$127 in module NX_DFF.
Removed a total of 0 dead cases.

7.3.3.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 1 redundant assignment.
Promoted 105 assignments to connections.

7.3.3.4. Executing PROC_INIT pass (extract init attributes).
Found init rule in `\NX_DFF.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$128'.
  Set init value: \O = 1'x

7.3.3.5. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \async_reset in `\NX_DFF.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:48$127'.

7.3.3.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.
<suppressed ~3 debug messages>

7.3.3.7. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
Creating decoders for process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:139$369'.
     1/3: $1$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:141$367_EN[35:0]$376
     2/3: $1$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:141$367_DATA[35:0]$375
     3/3: $1$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:141$367_ADDR[4:0]$374
Creating decoders for process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
Creating decoders for process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:107$197'.
     1/3: $1$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:109$195_EN[17:0]$202
     2/3: $1$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:109$195_DATA[17:0]$203
     3/3: $1$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:109$195_ADDR[5:0]$204
Creating decoders for process `\NX_DFF.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$128'.
Creating decoders for process `\NX_DFF.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:48$127'.
     1/1: $0\O[0:0]

7.3.3.8. Executing PROC_DLATCH pass (convert process syncs to latches).

7.3.3.9. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\NX_XRFB_32x36.\i' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$335_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$336_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$337_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$338_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$339_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$340_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$341_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$342_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$343_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$344_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$345_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$346_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$347_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$348_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$349_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$350_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$351_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$352_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$353_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$354_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$355_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$356_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$357_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$358_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$359_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$360_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$361_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$362_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$363_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$364_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$365_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:134$366_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:141$367_ADDR' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:139$369'.
  created $dff cell `$procdff$464' with positive edge clock.
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:141$367_DATA' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:139$369'.
  created $dff cell `$procdff$465' with positive edge clock.
Creating register for signal `\NX_XRFB_32x36.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:141$367_EN' using process `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:139$369'.
  created $dff cell `$procdff$466' with positive edge clock.
Creating register for signal `\NX_XRFB_64x18.\i' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$133_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$132_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$131_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$142_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$141_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$140_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$139_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$150_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$138_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$149_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$137_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$148_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$151_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$147_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$146_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$152_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$145_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$136_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$144_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$135_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$143_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$134_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$157_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$156_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$160_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$155_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$159_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$154_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$158_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$153_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$177_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$176_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$175_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$174_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$191_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$173_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$190_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$172_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$189_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$171_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$188_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$170_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$187_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$169_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$186_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$168_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$185_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$184_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$167_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$183_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$166_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$182_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$165_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$181_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$164_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$180_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$163_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$179_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$162_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$178_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$161_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$192_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$194_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:102$193_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
  created direct connection (no actual register cell created).
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:109$195_EN' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:107$197'.
  created $dff cell `$procdff$467' with positive edge clock.
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:109$195_DATA' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:107$197'.
  created $dff cell `$procdff$468' with positive edge clock.
Creating register for signal `\NX_XRFB_64x18.$memwr$\mem$/home/lofty/yosys/share/nanoxplore/cells_sim.v:109$195_ADDR' using process `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:107$197'.
  created $dff cell `$procdff$469' with positive edge clock.
Creating register for signal `\NX_DFF.\O' using process `\NX_DFF.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:48$127'.
  created $adff cell `$procdff$470' with positive edge clock and positive level reset.

7.3.3.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

7.3.3.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$410'.
Found and cleaned up 1 empty switch in `\NX_XRFB_32x36.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:139$369'.
Removing empty process `NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$270'.
Found and cleaned up 1 empty switch in `\NX_XRFB_64x18.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:107$197'.
Removing empty process `NX_DFF.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:0$128'.
Found and cleaned up 1 empty switch in `\NX_DFF.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:48$127'.
Removing empty process `NX_DFF.$proc$/home/lofty/yosys/share/nanoxplore/cells_sim.v:48$127'.
Cleaned up 3 empty switches.

7.3.3.12. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

7.3.4. Executing FLATTEN pass (flatten design).

7.3.5. Executing TRIBUF pass.

7.3.6. Executing DEMINOUT pass (demote inout ports to input or output).

7.3.7. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

7.3.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

7.3.9. Executing CHECK pass (checking for obvious problems).
Checking module tristate...
Found and reported 0 problems.

7.3.10. Executing OPT pass (performing simple optimizations).

7.3.10.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

7.3.10.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

7.3.10.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tristate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

7.3.10.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tristate.
Performed a total of 0 changes.

7.3.10.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

7.3.10.6. Executing OPT_DFF pass (perform DFF optimizations).

7.3.10.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

7.3.10.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

7.3.10.9. Finished OPT passes. (There is nothing left to do.)

7.3.11. Executing FSM pass (extract and optimize FSM).

7.3.11.1. Executing FSM_DETECT pass (finding FSMs in design).

7.3.11.2. Executing FSM_EXTRACT pass (extracting FSM from design).

7.3.11.3. Executing FSM_OPT pass (simple optimizations of FSMs).

7.3.11.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

7.3.11.5. Executing FSM_OPT pass (simple optimizations of FSMs).

7.3.11.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).

7.3.11.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

7.3.11.8. Executing FSM_MAP pass (mapping FSMs to basic logic).

7.3.12. Executing OPT pass (performing simple optimizations).

7.3.12.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

7.3.12.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

7.3.12.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tristate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

7.3.12.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tristate.
Performed a total of 0 changes.

7.3.12.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

7.3.12.6. Executing OPT_DFF pass (perform DFF optimizations).

7.3.12.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

7.3.12.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

7.3.12.9. Finished OPT passes. (There is nothing left to do.)

7.3.13. Executing WREDUCE pass (reducing word size of cells).

7.3.14. Executing PEEPOPT pass (run peephole optimizers).

7.3.15. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

7.3.16. Executing SHARE pass (SAT-based resource sharing).

7.3.17. Executing TECHMAP pass (map to technology primitives).

7.3.17.1. Executing Verilog-2005 frontend: /home/lofty/yosys/share/cmp2lut.v
Parsing Verilog input from `/home/lofty/yosys/share/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

7.3.17.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~6 debug messages>

7.3.18. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

7.3.19. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

7.3.20. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module tristate:
  created 0 $alu and 0 $macc cells.

7.3.21. Executing TECHMAP pass (map to technology primitives).

7.3.21.1. Executing Verilog-2005 frontend: /home/lofty/yosys/share/nanoxplore/arith_map.v
Parsing Verilog input from `/home/lofty/yosys/share/nanoxplore/arith_map.v' to AST representation.
Generating RTLIL representation for module `\_80_ecp5_alu'.
Successfully finished Verilog frontend.

7.3.21.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

7.3.22. Executing OPT pass (performing simple optimizations).

7.3.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

7.3.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

7.3.22.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tristate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

7.3.22.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tristate.
Performed a total of 0 changes.

7.3.22.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

7.3.22.6. Executing OPT_DFF pass (perform DFF optimizations).

7.3.22.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

7.3.22.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

7.3.22.9. Finished OPT passes. (There is nothing left to do.)

7.3.23. Executing MEMORY pass.

7.3.23.1. Executing OPT_MEM pass (optimize memories).
Performed a total of 0 transformations.

7.3.23.2. Executing OPT_MEM_PRIORITY pass (removing unnecessary memory write priority relations).
Performed a total of 0 transformations.

7.3.23.3. Executing OPT_MEM_FEEDBACK pass (finding memory read-to-write feedback paths).

7.3.23.4. Executing MEMORY_BMUX2ROM pass (converting muxes to ROMs).

7.3.23.5. Executing MEMORY_DFF pass (merging $dff cells to $memrd).

7.3.23.6. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

7.3.23.7. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

7.3.23.8. Executing OPT_MEM_WIDEN pass (optimize memories where all ports are wide).
Performed a total of 0 transformations.

7.3.23.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

7.3.23.10. Executing MEMORY_COLLECT pass (generating $mem cells).

7.3.24. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

7.3.25. Executing MEMORY_LIBMAP pass (mapping memories to cells).

7.3.26. Executing TECHMAP pass (map to technology primitives).

7.3.26.1. Executing Verilog-2005 frontend: /home/lofty/yosys/share/nanoxplore/cells_map.v
Parsing Verilog input from `/home/lofty/yosys/share/nanoxplore/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\aldff'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$__NX_XRFB_64x18_'.
Generating RTLIL representation for module `\$__NX_XRFB_32x36_'.
Successfully finished Verilog frontend.

7.3.26.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

7.3.27. Executing MEMORY_MAP pass (converting memories to logic and flip-flops).

7.3.28. Executing OPT pass (performing simple optimizations).

7.3.28.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

7.3.28.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

7.3.28.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tristate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

7.3.28.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tristate.
Performed a total of 0 changes.

7.3.28.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

7.3.28.6. Executing OPT_SHARE pass.

7.3.28.7. Executing OPT_DFF pass (perform DFF optimizations).

7.3.28.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

7.3.28.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

7.3.28.10. Finished OPT passes. (There is nothing left to do.)

7.3.29. Executing TECHMAP pass (map to technology primitives).

7.3.29.1. Executing Verilog-2005 frontend: /home/lofty/yosys/share/techmap.v
Parsing Verilog input from `/home/lofty/yosys/share/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

7.3.29.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~73 debug messages>

7.3.30. Executing DFFLEGALIZE pass (convert FFs to types supported by the target).

7.3.31. Executing TECHMAP pass (map to technology primitives).

7.3.31.1. Executing Verilog-2005 frontend: /home/lofty/yosys/share/nanoxplore/cells_map.v
Parsing Verilog input from `/home/lofty/yosys/share/nanoxplore/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\aldff'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$__NX_XRFB_64x18_'.
Generating RTLIL representation for module `\$__NX_XRFB_32x36_'.
Successfully finished Verilog frontend.

7.3.31.2. Executing Verilog-2005 frontend: /home/lofty/yosys/share/techmap.v
Parsing Verilog input from `/home/lofty/yosys/share/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

7.3.31.3. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~85 debug messages>

7.3.32. Executing OPT pass (performing simple optimizations).

7.3.32.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

7.3.32.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

7.3.32.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \tristate..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

7.3.32.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \tristate.
Performed a total of 0 changes.

7.3.32.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

7.3.32.6. Executing OPT_SHARE pass.

7.3.32.7. Executing OPT_DFF pass (perform DFF optimizations).

7.3.32.8. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..

7.3.32.9. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

7.3.32.10. Finished OPT passes. (There is nothing left to do.)

7.3.33. Executing Verilog-2005 frontend: /home/lofty/yosys/share/nanoxplore/abc9_model.v
Parsing Verilog input from `/home/lofty/yosys/share/nanoxplore/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__NX_DFF_SYNCONLY'.
Successfully finished Verilog frontend.

7.3.34. Executing TECHMAP pass (map to technology primitives).

7.3.34.1. Executing Verilog-2005 frontend: /home/lofty/yosys/share/nanoxplore/abc9_map.v
Parsing Verilog input from `/home/lofty/yosys/share/nanoxplore/abc9_map.v' to AST representation.
Generating RTLIL representation for module `\NX_DFF'.
Successfully finished Verilog frontend.

7.3.34.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

7.3.35. Executing ABC9 pass.

7.3.35.1. Executing ABC9_OPS pass (helper functions for ABC9).

7.3.35.2. Executing ABC9_OPS pass (helper functions for ABC9).

7.3.35.3. Executing SCC pass (detecting logic loops).
Found 0 SCCs in module tristate.
Found 0 SCCs.

7.3.35.4. Executing ABC9_OPS pass (helper functions for ABC9).

7.3.35.5. Executing PROC pass (convert processes to netlists).

7.3.35.5.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.3.35.5.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Removed a total of 0 dead cases.

7.3.35.5.3. Executing PROC_PRUNE pass (remove redundant assignments in processes).
Removed 0 redundant assignments.
Promoted 0 assignments to connections.

7.3.35.5.4. Executing PROC_INIT pass (extract init attributes).

7.3.35.5.5. Executing PROC_ARST pass (detect async resets in processes).

7.3.35.5.6. Executing PROC_ROM pass (convert switches to ROMs).
Converted 0 switches.

7.3.35.5.7. Executing PROC_MUX pass (convert decision trees to multiplexers).

7.3.35.5.8. Executing PROC_DLATCH pass (convert process syncs to latches).

7.3.35.5.9. Executing PROC_DFF pass (convert process syncs to FFs).

7.3.35.5.10. Executing PROC_MEMWR pass (convert process memory writes to cells).

7.3.35.5.11. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

7.3.35.5.12. Executing OPT_EXPR pass (perform const folding).

7.3.35.6. Executing TECHMAP pass (map to technology primitives).

7.3.35.6.1. Executing Verilog-2005 frontend: /home/lofty/yosys/share/techmap.v
Parsing Verilog input from `/home/lofty/yosys/share/techmap.v' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod_trunc'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\$__div_mod_floor'.
Generating RTLIL representation for module `\_90_divfloor'.
Generating RTLIL representation for module `\_90_modfloor'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_demux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

7.3.35.6.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~80 debug messages>

7.3.35.7. Executing OPT pass (performing simple optimizations).

7.3.35.7.1. Executing OPT_EXPR pass (perform const folding).

7.3.35.7.2. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

7.3.35.7.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Removed 0 multiplexer ports.

7.3.35.7.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
Performed a total of 0 changes.

7.3.35.7.5. Executing OPT_MERGE pass (detect identical cells).
Removed a total of 0 cells.

7.3.35.7.6. Executing OPT_DFF pass (perform DFF optimizations).

7.3.35.7.7. Executing OPT_CLEAN pass (remove unused cells and wires).

7.3.35.7.8. Executing OPT_EXPR pass (perform const folding).

7.3.35.7.9. Finished OPT passes. (There is nothing left to do.)

7.3.35.8. Executing TECHMAP pass (map to technology primitives).

7.3.35.8.1. Executing Verilog-2005 frontend: /home/lofty/yosys/share/abc9_map.v
Parsing Verilog input from `/home/lofty/yosys/share/abc9_map.v' to AST representation.
Successfully finished Verilog frontend.

7.3.35.8.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~2 debug messages>

7.3.35.9. Executing Verilog-2005 frontend: /home/lofty/yosys/share/abc9_model.v
Parsing Verilog input from `/home/lofty/yosys/share/abc9_model.v' to AST representation.
Generating RTLIL representation for module `$__ABC9_DELAY'.
Generating RTLIL representation for module `$__ABC9_SCC_BREAKER'.
Generating RTLIL representation for module `$__DFF_N__$abc9_flop'.
Generating RTLIL representation for module `$__DFF_P__$abc9_flop'.
Successfully finished Verilog frontend.

7.3.35.10. Executing ABC9_OPS pass (helper functions for ABC9).

7.3.35.11. Executing ABC9_OPS pass (helper functions for ABC9).

7.3.35.12. Executing ABC9_OPS pass (helper functions for ABC9).
<suppressed ~2 debug messages>

7.3.35.13. Executing AIGMAP pass (map logic to AIG).
Module tristate: replaced 0 cells with 0 new cells, skipped 1 cells.
  not replaced 1 cell types:
       1 $_TBUF_

7.3.35.13.1. Executing ABC9_OPS pass (helper functions for ABC9).

7.3.35.13.2. Executing ABC9_OPS pass (helper functions for ABC9).

7.3.35.13.3. Executing XAIGER backend.
<suppressed ~5 debug messages>
Extracted 0 AND gates and 5 wires from module `tristate' to a netlist network with 3 inputs and 1 outputs.

7.3.35.13.4. Executing ABC9_EXE pass (technology mapping using ABC9).

7.3.35.13.5. Executing ABC9.
Running ABC command: "<yosys-exe-dir>/yosys-abc" -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_lut <abc-temp-dir>/input.lut 
ABC: + read_box <abc-temp-dir>/input.box 
ABC: + &read <abc-temp-dir>/input.xaig 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =      3/      1  and =       0  lev =    0 (0.00)  mem = 0.00 MB  box = 0  bb = 0
ABC: + &scorr 
ABC: Warning: The network is combinational.
ABC: + &sweep 
ABC: + &dc2 
ABC: + &dch -f 
ABC: + &ps 
ABC: <abc-temp-dir>/input : i/o =      3/      1  and =       0  lev =    0 (0.00)  mem = 0.00 MB  ch =    0  box = 0  bb = 0
ABC: + &if -v 
ABC: K = 4. Memory (bytes): Truth =    0. Cut =   48. Obj =  128. Set =  528. CutMin = no
ABC: Node =       0.  Ch =     0.  Total mem =    0.00 MB. Peak cut mem =    0.00 MB.
ABC: P:  Del =    0.00.  Ar =       0.0.  Edge =        0.  Cut =        0.  T =     0.00 sec
ABC: P:  Del =    0.00.  Ar =       0.0.  Edge =        0.  Cut =        0.  T =     0.00 sec
ABC: P:  Del =    0.00.  Ar =       0.0.  Edge =        0.  Cut =        0.  T =     0.00 sec
ABC: F:  Del =    0.00.  Ar =       0.0.  Edge =        0.  Cut =        0.  T =     0.00 sec
ABC: A:  Del =    0.00.  Ar =       0.0.  Edge =        0.  Cut =        0.  T =     0.00 sec
ABC: A:  Del =    0.00.  Ar =       0.0.  Edge =        0.  Cut =        0.  T =     0.00 sec
ABC: Total time =     0.00 sec
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + &mfs 
ABC: Timing manager is given but there is no GIA of boxes.
ABC: Error: Abc_FrameUpdateGia(): Tranformation has failed.
ABC: + &ps -l 
ABC: <abc-temp-dir>/input : i/o =      3/      1  and =       0  lev =    0 (0.00)  mem = 0.00 MB  box = 0  bb = 0
ABC: Mapping (K=0)  :  lut =      0  edge =       0  lev =    0 (0.00)  mem = 0.00 MB
ABC: LUT = 0 : Ave = 0.00
ABC: + &write -n <abc-temp-dir>/output.aig 
ABC: + time 
ABC: elapse: 0.00 seconds, total: 0.00 seconds

7.3.35.13.6. Executing AIGER frontend.
<suppressed ~16 debug messages>
Removed 0 unused cells and 4 unused wires.

7.3.35.13.7. Executing ABC9_OPS pass (helper functions for ABC9).
ABC RESULTS:           input signals:        2
ABC RESULTS:          output signals:        1
Removing temp directory.

7.3.35.14. Executing TECHMAP pass (map to technology primitives).

7.3.35.14.1. Executing Verilog-2005 frontend: /home/lofty/yosys/share/abc9_unmap.v
Parsing Verilog input from `/home/lofty/yosys/share/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__DFF_x__$abc9_flop'.
Generating RTLIL representation for module `\$__ABC9_SCC_BREAKER'.
Successfully finished Verilog frontend.

7.3.35.14.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~5 debug messages>

7.3.36. Executing TECHMAP pass (map to technology primitives).

7.3.36.1. Executing Verilog-2005 frontend: /home/lofty/yosys/share/nanoxplore/abc9_unmap.v
Parsing Verilog input from `/home/lofty/yosys/share/nanoxplore/abc9_unmap.v' to AST representation.
Generating RTLIL representation for module `\$__NX_DFF_SYNCONLY'.
Successfully finished Verilog frontend.

7.3.36.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~3 debug messages>

7.3.37. Executing TECHMAP pass (map to technology primitives).

7.3.37.1. Executing Verilog-2005 frontend: /home/lofty/yosys/share/nanoxplore/cells_map.v
Parsing Verilog input from `/home/lofty/yosys/share/nanoxplore/cells_map.v' to AST representation.
Generating RTLIL representation for module `\$lut'.
Generating RTLIL representation for module `\dff'.
Generating RTLIL representation for module `\aldff'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$__NX_XRFB_64x18_'.
Generating RTLIL representation for module `\$__NX_XRFB_32x36_'.
Successfully finished Verilog frontend.

7.3.37.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~15 debug messages>

7.3.38. Executing OPT pass (performing simple optimizations).

7.3.38.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module tristate.

7.3.38.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\tristate'.
Removed a total of 0 cells.

7.3.38.3. Executing OPT_DFF pass (perform DFF optimizations).

7.3.38.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \tristate..
Removed 0 unused cells and 3 unused wires.
<suppressed ~1 debug messages>

7.3.38.5. Finished fast OPT passes.

7.3.39. Executing AUTONAME pass.
Renamed 1 objects in module tristate (2 iterations).
<suppressed ~1 debug messages>

7.3.40. Executing HIERARCHY pass (managing design hierarchy).

7.3.40.1. Analyzing design hierarchy..
Top module:  \tristate

7.3.40.2. Analyzing design hierarchy..
Top module:  \tristate
Removed 0 unused modules.

7.3.41. Printing statistics.

=== tristate ===

   Number of wires:                  3
   Number of wire bits:              3
   Number of public wires:           3
   Number of public wire bits:       3
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  1
     $_TBUF_                         1

7.3.42. Executing CHECK pass (checking for obvious problems).
Checking module tristate...
Found and reported 0 problems.

7.4. Executing CHECK pass (checking for obvious problems).
Checking module tristate...
Found and reported 0 problems.

7.5. Executing TECHMAP pass (map to technology primitives).

7.5.1. Executing Verilog-2005 frontend: /home/lofty/yosys/share/nanoxplore/cells_sim.v
Parsing Verilog input from `/home/lofty/yosys/share/nanoxplore/cells_sim.v' to AST representation.
Generating RTLIL representation for module `\NX_LUT'.
Generating RTLIL representation for module `\NX_DFF'.
Generating RTLIL representation for module `\NX_CY'.
Generating RTLIL representation for module `\NX_XRFB_64x18'.
Generating RTLIL representation for module `\NX_XRFB_32x36'.
Successfully finished Verilog frontend.

7.5.2. Executing Verilog-2005 frontend: /home/lofty/yosys/share/simcells.v
Parsing Verilog input from `/home/lofty/yosys/share/simcells.v' to AST representation.
Suppressed Warning: Yosys has only limited support for tri-state logic at the moment. (/home/lofty/yosys/share/simcells.v:456)
Generating RTLIL representation for module `\$_BUF_'.
Generating RTLIL representation for module `\$_NOT_'.
Generating RTLIL representation for module `\$_AND_'.
Generating RTLIL representation for module `\$_NAND_'.
Generating RTLIL representation for module `\$_OR_'.
Generating RTLIL representation for module `\$_NOR_'.
Generating RTLIL representation for module `\$_XOR_'.
Generating RTLIL representation for module `\$_XNOR_'.
Generating RTLIL representation for module `\$_ANDNOT_'.
Generating RTLIL representation for module `\$_ORNOT_'.
Generating RTLIL representation for module `\$_MUX_'.
Generating RTLIL representation for module `\$_NMUX_'.
Generating RTLIL representation for module `\$_MUX4_'.
Generating RTLIL representation for module `\$_MUX8_'.
Generating RTLIL representation for module `\$_MUX16_'.
Generating RTLIL representation for module `\$_AOI3_'.
Generating RTLIL representation for module `\$_OAI3_'.
Generating RTLIL representation for module `\$_AOI4_'.
Generating RTLIL representation for module `\$_OAI4_'.
Generating RTLIL representation for module `\$_TBUF_'.
Generating RTLIL representation for module `\$_SR_NN_'.
Generating RTLIL representation for module `\$_SR_NP_'.
Generating RTLIL representation for module `\$_SR_PN_'.
Generating RTLIL representation for module `\$_SR_PP_'.
Generating RTLIL representation for module `\$_DFF_N_'.
Generating RTLIL representation for module `\$_DFF_P_'.
Generating RTLIL representation for module `\$_DFFE_NN_'.
Generating RTLIL representation for module `\$_DFFE_NP_'.
Generating RTLIL representation for module `\$_DFFE_PN_'.
Generating RTLIL representation for module `\$_DFFE_PP_'.
Generating RTLIL representation for module `\$_DFF_NN0_'.
Generating RTLIL representation for module `\$_DFF_NN1_'.
Generating RTLIL representation for module `\$_DFF_NP0_'.
Generating RTLIL representation for module `\$_DFF_NP1_'.
Generating RTLIL representation for module `\$_DFF_PN0_'.
Generating RTLIL representation for module `\$_DFF_PN1_'.
Generating RTLIL representation for module `\$_DFF_PP0_'.
Generating RTLIL representation for module `\$_DFF_PP1_'.
Generating RTLIL representation for module `\$_DFFE_NN0N_'.
Generating RTLIL representation for module `\$_DFFE_NN0P_'.
Generating RTLIL representation for module `\$_DFFE_NN1N_'.
Generating RTLIL representation for module `\$_DFFE_NN1P_'.
Generating RTLIL representation for module `\$_DFFE_NP0N_'.
Generating RTLIL representation for module `\$_DFFE_NP0P_'.
Generating RTLIL representation for module `\$_DFFE_NP1N_'.
Generating RTLIL representation for module `\$_DFFE_NP1P_'.
Generating RTLIL representation for module `\$_DFFE_PN0N_'.
Generating RTLIL representation for module `\$_DFFE_PN0P_'.
Generating RTLIL representation for module `\$_DFFE_PN1N_'.
Generating RTLIL representation for module `\$_DFFE_PN1P_'.
Generating RTLIL representation for module `\$_DFFE_PP0N_'.
Generating RTLIL representation for module `\$_DFFE_PP0P_'.
Generating RTLIL representation for module `\$_DFFE_PP1N_'.
Generating RTLIL representation for module `\$_DFFE_PP1P_'.
Generating RTLIL representation for module `\$_ALDFF_NN_'.
Generating RTLIL representation for module `\$_ALDFF_NP_'.
Generating RTLIL representation for module `\$_ALDFF_PN_'.
Generating RTLIL representation for module `\$_ALDFF_PP_'.
Generating RTLIL representation for module `\$_ALDFFE_NNN_'.
Generating RTLIL representation for module `\$_ALDFFE_NNP_'.
Generating RTLIL representation for module `\$_ALDFFE_NPN_'.
Generating RTLIL representation for module `\$_ALDFFE_NPP_'.
Generating RTLIL representation for module `\$_ALDFFE_PNN_'.
Generating RTLIL representation for module `\$_ALDFFE_PNP_'.
Generating RTLIL representation for module `\$_ALDFFE_PPN_'.
Generating RTLIL representation for module `\$_ALDFFE_PPP_'.
Generating RTLIL representation for module `\$_DFFSR_NNN_'.
Generating RTLIL representation for module `\$_DFFSR_NNP_'.
Generating RTLIL representation for module `\$_DFFSR_NPN_'.
Generating RTLIL representation for module `\$_DFFSR_NPP_'.
Generating RTLIL representation for module `\$_DFFSR_PNN_'.
Generating RTLIL representation for module `\$_DFFSR_PNP_'.
Generating RTLIL representation for module `\$_DFFSR_PPN_'.
Generating RTLIL representation for module `\$_DFFSR_PPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_NPPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PNPP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPNP_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPN_'.
Generating RTLIL representation for module `\$_DFFSRE_PPPP_'.
Generating RTLIL representation for module `\$_SDFF_NN0_'.
Generating RTLIL representation for module `\$_SDFF_NN1_'.
Generating RTLIL representation for module `\$_SDFF_NP0_'.
Generating RTLIL representation for module `\$_SDFF_NP1_'.
Generating RTLIL representation for module `\$_SDFF_PN0_'.
Generating RTLIL representation for module `\$_SDFF_PN1_'.
Generating RTLIL representation for module `\$_SDFF_PP0_'.
Generating RTLIL representation for module `\$_SDFF_PP1_'.
Generating RTLIL representation for module `\$_SDFFE_NN0N_'.
Generating RTLIL representation for module `\$_SDFFE_NN0P_'.
Generating RTLIL representation for module `\$_SDFFE_NN1N_'.
Generating RTLIL representation for module `\$_SDFFE_NN1P_'.
Generating RTLIL representation for module `\$_SDFFE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFE_PN0N_'.
Generating RTLIL representation for module `\$_SDFFE_PN0P_'.
Generating RTLIL representation for module `\$_SDFFE_PN1N_'.
Generating RTLIL representation for module `\$_SDFFE_PN1P_'.
Generating RTLIL representation for module `\$_SDFFE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFE_PP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_NN0N_'.
Generating RTLIL representation for module `\$_SDFFCE_NN0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NN1N_'.
Generating RTLIL representation for module `\$_SDFFCE_NN1P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0N_'.
Generating RTLIL representation for module `\$_SDFFCE_NP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1N_'.
Generating RTLIL representation for module `\$_SDFFCE_NP1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PN0N_'.
Generating RTLIL representation for module `\$_SDFFCE_PN0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PN1N_'.
Generating RTLIL representation for module `\$_SDFFCE_PN1P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0N_'.
Generating RTLIL representation for module `\$_SDFFCE_PP0P_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1N_'.
Generating RTLIL representation for module `\$_SDFFCE_PP1P_'.
Generating RTLIL representation for module `\$_DLATCH_N_'.
Generating RTLIL representation for module `\$_DLATCH_P_'.
Generating RTLIL representation for module `\$_DLATCH_NN0_'.
Generating RTLIL representation for module `\$_DLATCH_NN1_'.
Generating RTLIL representation for module `\$_DLATCH_NP0_'.
Generating RTLIL representation for module `\$_DLATCH_NP1_'.
Generating RTLIL representation for module `\$_DLATCH_PN0_'.
Generating RTLIL representation for module `\$_DLATCH_PN1_'.
Generating RTLIL representation for module `\$_DLATCH_PP0_'.
Generating RTLIL representation for module `\$_DLATCH_PP1_'.
Generating RTLIL representation for module `\$_DLATCHSR_NNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_NNP_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPN_'.
Generating RTLIL representation for module `\$_DLATCHSR_NPP_'.
Generating RTLIL representation for module `\$_DLATCHSR_PNN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PNP_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPN_'.
Generating RTLIL representation for module `\$_DLATCHSR_PPP_'.
Successfully finished Verilog frontend.

7.5.3. Continuing TECHMAP pass.
Using template \$_TBUF_ for cells of type $_TBUF_.
No more expansions possible.
<suppressed ~157 debug messages>

7.6. Executing EQUIV_MAKE pass (creating equiv checking module).
Presumably equivalent wires: en_gold (\en_gold), en_gate (\en_gate) -> en
Presumably equivalent wires: i_gold (\i_gold), i_gate (\i_gate) -> i
Presumably equivalent wires: o_gold ($techmap$auto$simplemap.cc:300:simplemap_tribuf$80.$ternary$/home/lofty/yosys/share/simcells.v:456$1110_Y_gold), o_gate ($techmap\o_$_TBUF__Y.$ternary$/home/lofty/yosys/share/simcells.v:456$1110_Y_gate) -> o
Setting undriven nets to undef: $auto$simplemap.cc:300:simplemap_tribuf$80.E_gold
Setting undriven nets to undef: \o_$_TBUF__Y.Y_gate
Setting undriven nets to undef: $auto$simplemap.cc:300:simplemap_tribuf$80.A_gold
Setting undriven nets to undef: $auto$simplemap.cc:300:simplemap_tribuf$80.Y_gold
Setting undriven nets to undef: \o_$_TBUF__Y.E_gate
Setting undriven nets to undef: \o_$_TBUF__Y.A_gate

7.7. Executing EQUIV_INDUCT pass.
Found 1 unproven $equiv cells in module equiv:
  Proving existence of base case for step 1. (51 clauses over 22 variables)
  Proving induction step 1. (99 clauses over 42 variables)
  Proof for induction step holds. Entire workset of 1 cells proven!
Proved 1 previously unproven $equiv cells.

7.8. Executing EQUIV_STATUS pass.
Found 1 $equiv cells in equiv:
  Of those cells 1 are proven and 0 are unproven.
  Equivalence successfully proven!

End of script. Logfile hash: 2d835cc8d8, CPU: user 0.14s system 0.01s, MEM: 27.13 MB peak
Yosys 0.32+66 (git sha1 2f901a829, clang 15.0.7 -fPIC -Os)
Time spent: 42% 23x read_verilog (0 sec), 12% 1x abc9_exe (0 sec), ...
